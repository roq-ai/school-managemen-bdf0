generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model academic_year {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  year            Int
  start_date      DateTime     @db.Date
  end_date        DateTime     @db.Date
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  student         student[]
}

model organization {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  academic_year academic_year[]
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model schedule {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  day_of_week Int
  start_time  DateTime @db.Time(6)
  end_time    DateTime @db.Time(6)
  class       String   @db.VarChar(255)
  subject     String   @db.VarChar(255)
  teacher_id  String   @db.Uuid
  student_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  student     student  @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teacher     teacher  @relation(fields: [teacher_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model student {
  id                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  class             String        @db.VarChar(255)
  section           String        @db.VarChar(255)
  fees              Int
  transport_details String?       @db.VarChar(255)
  user_id           String        @db.Uuid
  academic_year_id  String        @db.Uuid
  created_at        DateTime      @default(now()) @db.Timestamp(6)
  updated_at        DateTime      @default(now()) @db.Timestamp(6)
  schedule          schedule[]
  academic_year     academic_year @relation(fields: [academic_year_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user              user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model teacher {
  id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subject        String     @db.VarChar(255)
  class_assigned String     @db.VarChar(255)
  user_id        String     @db.Uuid
  created_at     DateTime   @default(now()) @db.Timestamp(6)
  updated_at     DateTime   @default(now()) @db.Timestamp(6)
  schedule       schedule[]
  user           user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  student      student[]
  teacher      teacher[]
}
